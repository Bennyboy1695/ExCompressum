buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}
apply plugin: 'forge'
apply plugin: 'maven'

def BUILD_NUMBER = System.getenv("BUILD_NUMBER") ?: "0"
def MAVEN_REPO = System.getenv("MAVEN_REPO") ?: ""
def MAVEN_USERNAME = System.getenv("MAVEN_USERNAME") ?: ""
def MAVEN_PASSWORD = System.getenv("MAVEN_PASSWORD") ?: ""

version = "1.1." + BUILD_NUMBER
group= "net.blay09.mods"
archivesBaseName = "excompressum"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"
}

configurations {
    provided
}

sourceSets.main.compileClasspath += [configurations.provided]

idea {
    module {
        scopes.PROVIDED.plus += [configurations.provided]
    }
}

repositories {
    maven {
        name 'tterrag'
        url 'http://maven.tterrag.com/'
    }
    maven {
        name 'Chickenbones'
        url 'http://chickenbones.net/maven/'
    }
    maven {
        name 'RX14'
        url 'http://mvn.rx14.co.uk/repo'
    }
    maven {
        name 'TiConMantle'
        url "http://dvs1.progwml6.com/files/maven/"
    }
    ivy {
        name "MineTweaker"
        artifactPattern "http://minetweaker3.powerofbytes.com/download/[module](-[classifier])-[revision].[ext]"
    }
    ivy {
        name "CoFHCore"
        artifactPattern "http://addons-origin.cursecdn.com/files/2283/118/[module]-[revision].[ext]"
    }
    ivy {
        name "ThermalFoundation"
        artifactPattern "http://addons-origin.cursecdn.com/files/2282/520/[module]-[revision].[ext]"
    }
}

dependencies {
    compile "exnihilo:Ex-Nihilo:1.38-49:deobf"
    compile "tconstruct:TConstruct:1.7.10-1.8.8.build1003:deobf"
    compile "com.azanor.baubles:Baubles:1.7.10-1.0.1.9.3"
    compile "vazkii.botania:Botania:r1.8-250.681"
    compile name: "Ex-Astris-Rebirth-MC1.7.10", version: "1.01-45", ext: "jar"
    compile name: "CoFHCore", version: "[1.7.10]3.1.2-325", ext: "jar"
    compile name: "ThermalFoundation", version: "[1.7.10]1.2.3-112", ext: "jar"
    compile name: "MineTweaker3", version: "1.7.10-3.0.10B", classifier: "Dev", ext: "jar"
    provided "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
    provided "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"
    compile "codechicken:ForgeMultipart:1.7.10-1.2.0.345:dev"
}

processResources
        {
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                expand 'version':project.version, 'mcversion':project.minecraft.version
            }

            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }


jar {
    appendix "mc" + minecraft.version
}

task jarDev(type: Jar) {
    from sourceSets.main.output

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    classifier "dev"
    appendix "mc" + minecraft.version
}

artifacts {
    archives jarDev
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: MAVEN_REPO) {
                authentication(userName: MAVEN_USERNAME, password: MAVEN_PASSWORD)
            }

            pom {
                groupId = project.group
                version = project.version
                artifactId = project.archivesBaseName
            }

            pom.withXml {
                asNode().dependencies.dependency.findAll {
                    it.scope.text() == "compile"
                }.each {
                    if(it.optional)
                        it.optional.value = 'true'
                    else
                        it.appendNode('optional', 'true');
                }
            }
        }
    }
}